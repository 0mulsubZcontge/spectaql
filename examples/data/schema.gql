"This is a description of `MyType`"
type MyType {
  "This is a description of `nonRequiredField`"
  nonRequiredField(
    "This is a description of a `nonRequiredArg`"
    nonRequiredArg: String = "some default string"
    reqArg: String!
    reqArrayArg: [String]!
    dblReqArrayArg: [String!]!

  ): String

  requiredField: String! @deprecated(reason: "`requiredField` is going away")

  episode: EpisodeEnum!

  requiredArrayField: [String]!

  doubleRequiredArrayField: [String!]!
}

type SecretType {
  "This is a type that should probably be undocumented"
  secret: String!
}

type Query {
  "This is a description of `myQuery`"
  myQuery(
    "This is a description of a `nonRequiredQueryArg`"
    nonReqQueryArg: String = "some default string"
    reqQueryArg: String
    reqQueryArrayArg: [String]!
    dblReqQueryArrayArg: [String!]!
  ): String @deprecated(reason: "`myQuery` is going away")

  "This Query has the same name as a Mutation"
  stringThing: String

  getInts: [Int]

  "I'm the optionals query"
  optionalsQuery(
    optionalArg: [String]
  ): [String]

  requiredsQuery(
    dblReqArg: [String!]!
  ): [String!]!

  myTypes: [MyType]
}

type Mutation {
  "This Mutation has the same name as a Query"
  stringThing(anArgument: String): String
  myMutation(
    "This is a description of a `nonRequiredQueryArg`"
    nonReqQueryArg: String = "some default string"
    reqQueryArg: String!
    reqQueryArrayArg: [String]!
    dblReqQueryArrayArg: [String!]!
  ): String
}

"These are very important `enum`s"
enum EpisodeEnum {
  "Who is Luke?"
  NEWHOPE @deprecated(reason: "`NEWHOPE` is going away")
  "Who is Darth?"
  EMPIRE
  "Who are the Ewoks?"
  JEDI
}

"An Input Type for filtering things"
input FilterType {
  "Comment for someField"
  someField: Boolean = false
  "Comment for anotherField"
  anotherField: String
  "Comment for episodeEnums"
  episodeEnums: [EpisodeEnum!]
}
