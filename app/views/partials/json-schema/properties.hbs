{{!--
  Original work Copyright (c) 2015 Nils Knappmeier
  https://github.com/bootprint/bootprint-json-schema

  Renders json-schema object properties.
--}}

{{!--
  This does the Fields on Types
--}}
{{#if properties}}
<section class="json-schema-properties-blank">
  <table>
    <tr>
      <th>Field Name</th>
      <th>Description</th>
    </tr>
    {{#each properties}}
      <tr>
        {{! The Name column }}
        <td data-property-name="{{htmlId @key}}"
          {{#if (and isDeprecated (not @root.info.x-hideIsDeprecated)) }}class="swagger-operation-deprecated"{{/if}}
          {{!-- Not sure what this does yet
            {{#if description}} class="has-description"{{/if}}
          --}}
        >
          {{! Add in the name and parent since they're unattainable otherwise }}
          {{~> graphql/name-and-type properties.return name=@key parent=.. }}
          {{!-- Handled now in name-and-type
            {{#ifcontains ../required @key}}
              <span class="json-property-not-nullable"></span>
            {{/ifcontains}}
          --}}
          {{#ifeq @key ../discriminator}}
            <span class="json-property-discriminator"></span>
          {{/ifeq}}
          {{#if readOnly}}
            <span class="json-property-read-only"></span>
          {{/if}}
        </td>
        {{!-- Not sure what this does yet
          <td>
            {{>json-schema/datatype discriminator=(equal @key ../discriminator)}}
          </td>
        --}}
        {{! The Description column }}
        <td>
          {{ md (
            concat
              (ternary description
                (stripTrailing description ".")
                ""
              )
              (ternary (and deprecationReason (not @root.info.x-hideDeprecationReason))
                (concat "Deprecation Reason: " deprecationReason)
                ""
              )
              joiner=". " altJoiner=" " altJoinerRegex="[\?\!]" filterFalsy=true
            ) stripParagraph=true
          }}
          {{!--
            {{#if items}}
              <dt class="json-inner-schema">
                {{~>json-schema/body $ref="" description=""}}
              </dt>
            {{/if}}
          --}}
        </td>
      </tr>
      {{#if (nempty properties.arguments.properties)}}
        <tr><td colspan="2" class="no-top-border">
          {{>graphql/field-arguments properties.arguments }}

          {{!-- Not sure we want to display this thing here like this...
            <dt class="json-inner-schema">
                {{~>json-schema/body $ref="" description="" properties=arguments}}
            </dt>
          --}}
        </td></tr>
      {{/if}}
    {{/each}}
  </table>
</section>
{{/if}}
