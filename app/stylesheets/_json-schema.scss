.json-schema-description {
  @include named-section($msg-json-section-description);
}

.json-schema-properties {
  @include named-section($msg-json-section-properties);

  dd {
    color: $dark-gray;
  }
  dd:not(:last-child) {
    padding-bottom: 0.75rem;
  }

  dl {
    margin: 0;
  }
}

.json-schema-ref-array {
  &:before {
    color: $dark-gray;
    content: "Array<";
  }
  &:after {
    color: $dark-gray;
    content: ">";
  }
}

.json-schema-example {
  @include named-section($msg-json-section-example);
}

.json-schema-array-items {
  @include named-section($msg-json-section-items);
}

.json-schema-allOf-inherited {
  @include named-section($msg-json-section-inherited);
}

.json-schema-anyOf {
  > dl {
    padding-left: 1em;
    dt:not(:first-child):before {
      content: "or ";
    }
    dt:first-child:before {
      content: "either ";
    }
  }
}

.json-schema-additionalProperties {
  @include named-section($msg-json-section-additionalProperties);
}

.json-inner-schema {
  .json-schema-properties,
  .json-schema-array-items,
  .json-schema-description,
  .json-schema-example {
    padding-left: 1em;
    margin-top: 0.5em;
    padding-bottom: 0.5em;
  }
}

.json-property-discriminator {
  @include named-label($msg-json-discriminator)
}

.json-property-required {
  @include named-label($msg-json-required)
}

.json-property-read-only {
  @include named-label($msg-json-read-only)
}


.json-property-type {
  font-style: italic;
  font-weight: 100;
}

.json-property-format {
  font-size: smaller;
}

.json-property-enum {
  font-weight: lighter;
  font-size: small;
}

.json-property-default-value {
  font-weight: lighter;
  font-size: small;
  &:before {
    content: '(default: "';
  }
  &:after {
    content: '")';
  }
}

.json-property-enum-item {
  &:before, &:after {
    content: "\""
  }
  font-weight: lighter;
  font-size: small;

}

.json-schema-reference {
  font-size: 90%;
}
